      # üîç Obtener cambios entre el √∫ltimo "real" release y el nuevo
      - name: Get changes between releases
        id: get_changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          compare_url="https://api.github.com/repos/${{ github.repository }}/compare/${{ env.last_real_tag }}...${{ env.new_tag }}"
          compare_data=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$compare_url")

          # Extraer PRs desde los commits
          pr_list=$(echo "$compare_data" | jq -r '.commits[] | select(.commit.message | test("#[0-9]+")) | "- PR #\(.commit.message | match("#[0-9]+").string) by \(.author.login) in \(.html_url)"')

          # Extraer todos los commits para agregarlos al changelog
          commit_list=$(echo "$compare_data" | jq -r '.commits[] | "- \(.commit.message)"')

          echo "pr_list<<EOF" >> $GITHUB_ENV
          echo "$pr_list" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "commit_list<<EOF" >> $GITHUB_ENV
          echo "$commit_list" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # üîÑ Actualizar el Release con los cambios detectados
      - name: Update Release with Changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_id=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.new_tag }}" | jq -r .id)

          changelog="## What's Changed\n"
          
          # Agregar los PRs a la lista en formato Markdown
          changelog+="${{ env.pr_list }}"

          # Formatear los nuevos contribuyentes (solo si se aplican)
          contributors_list=""
          for contributor in $(echo "$prs" | jq -r '.[] | select(.user.login != null) | .user.login'); do
            contributors_list+="- @$contributor made their first contribution in https://github.com/$contributor\n"
          done

          changelog+="\n## New Contributors\n$contributors_list"
          changelog+="\n**Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ env.last_real_tag }}...${{ env.new_tag }}"

          # Actualizar el release con el changelog en formato Markdown
          curl -s -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"body\": \"$changelog\"}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$release_id"

          echo "‚úÖ Release updated with changelog!"
